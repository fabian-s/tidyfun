% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tfb-spline.R
\name{tfb_spline}
\alias{tfb_spline}
\alias{tfb_spline.data.frame}
\alias{tfb_spline.matrix}
\alias{tfb_spline.numeric}
\alias{tfb_spline.list}
\alias{tfb_spline.tfd}
\alias{tfb_spline.tfb}
\title{Spline-based representation of functional data}
\usage{
tfb_spline(data, ...)

\method{tfb_spline}{data.frame}(data, id = 1, arg = 2, value = 3,
  domain = NULL, penalized = TRUE, global = FALSE,
  resolution = NULL, ...)

\method{tfb_spline}{matrix}(data, arg = NULL, domain = NULL,
  penalized = TRUE, global = FALSE, resolution = NULL, ...)

\method{tfb_spline}{numeric}(data, arg = NULL, domain = NULL,
  penalized = TRUE, global = FALSE, resolution = NULL, ...)

\method{tfb_spline}{list}(data, arg = NULL, domain = NULL,
  penalized = TRUE, global = FALSE, resolution = NULL, ...)

\method{tfb_spline}{tfd}(data, arg = NULL, domain = NULL,
  penalized = TRUE, global = FALSE, resolution = NULL, ...)

\method{tfb_spline}{tfb}(data, arg = NULL, domain = NULL,
  penalized = TRUE, global = FALSE, resolution = NULL, ...)
}
\arguments{
\item{data}{a \code{matrix}, \code{data.frame} or \code{list} of suitable shape, or another
\code{tf}-object containing functional data.}

\item{...}{arguments to the calls to \code{\link[mgcv:s]{mgcv::s()}} setting up the basis and
\code{\link[mgcv:magic]{mgcv::magic()}} (if \code{penalized} is TRUE). If not user-specified here,
\code{tidyfun} uses \code{k = 25} cubic regression spline basis functions
(i.e., \code{bs = "cr"}) by default, but this should be set manually}

\item{id}{The name/number of the column defining which data belong to which function.}

\item{arg}{optional vector of argument values}

\item{value}{The name/number of the column containing the function evaluations.}

\item{domain}{range of the \code{arg}.}

\item{penalized}{should the coefficients of the basis representation be estimated
via \code{\link[mgcv:magic]{mgcv::magic()}} (default) or ordinary least squares.}

\item{global}{Defaults to \code{FALSE}.
If \code{TRUE} and \code{penalized = TRUE}, all functions share the same smoothing
parameter (see Details).}

\item{resolution}{resolution of the evaluation grid. See details for \code{\link[=tfd]{tfd()}}.}
}
\value{
a \code{tfb}-object
}
\description{
Represent curves as a weighted sum of spline basis functions.
}
\details{
The basis to be used is set up via a call to \code{\link[mgcv:s]{mgcv::s()}} and all the spline bases
discussed in \code{\link[mgcv:smooth.terms]{mgcv::smooth.terms()}} are available, in principle. Depending on
the value of the \code{penalized}- and \code{global}-flags, the coefficient vectors for each
observation are then estimated via fitting a GAM
(separately for each observation, if \code{!global})
via \code{\link[mgcv:magic]{mgcv::magic()}} or unpenalized maximum likelihood.

After the "smoothed" representation is computed, the amount of smoothing that
was performed is reported in terms of the "percentage of variance preserved",
which is the variance (explained deviance, in the general case) of the smoothed function values divided by the variance
of the original values (null deviance, in the general case).
The \code{...} arguments supplies arguments to both the
spline basis set up (via \code{\link[mgcv:s]{mgcv::s()}}) and the estimation (via
\code{\link[mgcv:magic]{mgcv::magic()}} or \code{\link[mgcv:gam]{mgcv::gam()}}), most important:
how many basis functions \code{k} the spline basis should have, the default is 25.
The \code{...}-argument can also be used to supply a \code{family}-argument to the fitters
for data for which squared errors are not a reasonable criterion for the representation
accuracy.
}
\section{Methods (by class)}{
\itemize{
\item \code{data.frame}: convert data frames

\item \code{matrix}: convert matrices

\item \code{numeric}: convert matrices

\item \code{list}: convert lists

\item \code{tfd}: convert \code{tfd} (raw functional data)

\item \code{tfb}: convert \code{tfb}: modify basis representation
}}

\seealso{
\code{\link[mgcv:smooth.terms]{mgcv::smooth.terms()}} for spline basis options.
}
